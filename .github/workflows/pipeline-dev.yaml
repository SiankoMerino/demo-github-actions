name: CI/CD Pipeline Dev  ## nombre del workflow, se puede cambiar por cualquier otro nombre
run-name: Deployment Demo pull request  ## nombre que aparece en la interfaz de GitHub, nombre de ejecucion del workflow
on:
  workflow_dispatch: ## permite ejecutar el workflow manualmente desde la interfaz de GitHub
  push:   ##se ejecunta cuando hay un push a main o a cualquier rama que empiece por feature/
    branches:   ## especifica las ramas donde se ejecuta el workflow
      - main
      - feature/*
    paths:   ## especifica los archivos o carpetas que deben cambiar para que se ejecute el workflow
      - '**.yaml'  ## cualquier archivo con extensión .yaml en cualquier carpeta
      - '.github/workflows/**'  ## cualquier archivo en la carpeta .github/workflows
      - 'src/**'  ## cualquier archivo en la carpeta src
      - 'config/**'  ## cualquier archivo en la carpeta config
      - '!docs/**'  ## excluye cualquier archivo en la carpeta docs (el símbolo ! indica exclusión)
      - '!README.md'  ## excluye el archivo README.md
  ##Se pueden agregar mas eventos para que se ejecute el workflow, como pull_request, schedule, etc.
  pull_request: ##se ejecuta cuando se crea o actualiza un pull request a main o a cualquier rama que empiece por feature/
    branches:
      - main
      - feature/*
    paths:
      - '**.md'
  
  #schedule:  ## permite ejecutar el workflow en un horario específico
  #  - cron: '0 0 * * *'  ## se ejecuta todos los días a medianoche (hora UTC), el formato es: minuto hora día-del-mes mes día-de-la-semana

##Una vez que se cumple la condición anterior, se ejecuta el workflow
##Cada Job que se cree, se ejecuta en un servidor virtual distinto

jobs:   ## define los trabajos que se van a ejecutar en el workflow
  job1:   ## Es el nombre del job, se puede cambiar por cualquier otro nombre
    runs-on: ubuntu-latest  ## especifica el sistema operativo del servidor virtual donde se ejecuta el job
    steps: ## define los pasos que se van a ejecutar en el job
      - name: checkout code ## nombre del paso, se puede cambiar por cualquier otro nombre
        uses: actions/checkout@v3 ## uses: indica que se va a usar un actions ya existente de GitHub

      - name: List files
        run: ls -la ## lista los archivos del repositorio

      - name: Print message
        run: echo "hello world" ## run: especifica el comando que se va a ejecutar

      - name: Print many messages
        run: |    ## el símbolo | indica que se van a escribir varias líneas de comandos
            echo "line 1"
            echo "line 2"
            echo "line 3"

  job2:
    needs: job1  ## indica que este job depende de la finalización del job1 (si quieres que se ejecuten en paralelo, elimina esta línea)
    #needs: [job1, job3]  ## si quieres que dependa de varios jobs, usa esta sintaxis
    runs-on: ubuntu-latest
    steps:
      - name: Print message job2
        run: echo "hello world from job2"

  variables-repository:
    runs-on: ubuntu-latest
    steps:
      - name: print variable repository
        run: echo "the varible repository is ${{ vars.NAME }}"
  secreto-repositorio:
    runs-on: ubuntu-latest
    steps:
      - name: print secret repository
        run: echo "the secret repository is ${{ secrets.SECRETO_REPOSITORIO }}"